<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE nmaprun>
<?xml-stylesheet href="file:///usr/bin/../share/nmap/nmap.xsl" type="text/xsl"?>
<!-- Nmap 7.70 scan initiated Fri Sep 27 15:46:51 2019 as: nmap -vv -&#45;reason -Pn -sV -p 443 &quot;-&#45;script=banner,(http* or ssl*) and not (brute or broadcast or dos or external or http-slowloris* or fuzzer)&quot; -oN /root/toolbox/writeups/vulnhub.kioptrix1/results/192.168.92.181/scans/tcp_443_http_nmap.txt -oX /root/toolbox/writeups/vulnhub.kioptrix1/results/192.168.92.181/scans/xml/tcp_443_https_nmap.xml 192.168.92.181 -->
<nmaprun scanner="nmap" args="nmap -vv -&#45;reason -Pn -sV -p 443 &quot;-&#45;script=banner,(http* or ssl*) and not (brute or broadcast or dos or external or http-slowloris* or fuzzer)&quot; -oN /root/toolbox/writeups/vulnhub.kioptrix1/results/192.168.92.181/scans/tcp_443_http_nmap.txt -oX /root/toolbox/writeups/vulnhub.kioptrix1/results/192.168.92.181/scans/xml/tcp_443_https_nmap.xml 192.168.92.181" start="1569624411" startstr="Fri Sep 27 15:46:51 2019" version="7.70" xmloutputversion="1.04">
<scaninfo type="syn" protocol="tcp" numservices="1" services="443"/>
<verbose level="2"/>
<debugging level="0"/>
<taskbegin task="NSE" time="1569624412"/>
<taskend task="NSE" time="1569624412"/>
<taskbegin task="NSE" time="1569624412"/>
<taskend task="NSE" time="1569624412"/>
<taskbegin task="ARP Ping Scan" time="1569624412"/>
<taskend task="ARP Ping Scan" time="1569624412" extrainfo="1 total hosts"/>
<taskbegin task="Parallel DNS resolution of 1 host." time="1569624412"/>
<taskend task="Parallel DNS resolution of 1 host." time="1569624412"/>
<taskbegin task="SYN Stealth Scan" time="1569624412"/>
<taskend task="SYN Stealth Scan" time="1569624412" extrainfo="1 total ports"/>
<taskbegin task="Service scan" time="1569624413"/>
<taskend task="Service scan" time="1569624427" extrainfo="1 service on 1 host"/>
<taskbegin task="NSE" time="1569624427"/>
<taskprogress task="NSE" time="1569624458" percent="83.71" remaining="7" etc="1569624464"/>
<taskprogress task="NSE" time="1569624488" percent="97.78" remaining="2" etc="1569624489"/>
<taskprogress task="NSE" time="1569624518" percent="99.05" remaining="1" etc="1569624519"/>
<taskprogress task="NSE" time="1569624549" percent="99.37" remaining="1" etc="1569624550"/>
<taskend task="NSE" time="1569624576"/>
<taskbegin task="NSE" time="1569624576"/>
<taskend task="NSE" time="1569624576"/>
<host starttime="1569624412" endtime="1569624576"><status state="up" reason="arp-response" reason_ttl="0"/>
<address addr="192.168.92.181" addrtype="ipv4"/>
<address addr="00:0C:29:45:0D:56" addrtype="mac" vendor="VMware"/>
<hostnames>
</hostnames>
<ports><port protocol="tcp" portid="443"><state state="open" reason="syn-ack" reason_ttl="64"/><service name="https" product="Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b" tunnel="ssl" method="probed" conf="10"/><script id="http-aspnet-debug" output="ERROR: Script execution failed (use -d to debug)"/><script id="http-chrono" output="Request times for /; avg: 8444.68ms; min: 8213.14ms; max: 9133.44ms"/><script id="http-comments-displayer" output="Couldn&apos;t find any comments."/><script id="http-csrf" output="Couldn&apos;t find any CSRF vulnerabilities."/><script id="http-date" output="Fri, 27 Sep 2019 22:49:06 GMT; +1m32s from local time."><elem key="date">2019-09-27T22:49:06+00:00</elem>
<elem key="delta">92.0</elem>
</script><script id="http-devframework" output="Couldn&apos;t determine the underlying framework or CMS. Try increasing &apos;httpspider.maxpagecount&apos; value to spider more pages."/><script id="http-dombased-xss" output="Couldn&apos;t find any DOM based XSS."/><script id="http-drupal-enum" output="Nothing found amongst the top 100 resources,use -&#45;script-args number=&lt;number|all&gt; for deeper analysis)"/><script id="http-errors" output="&#xa;Spidering limited to: maxpagecount=40; withinhost=192.168.92.181&#xa;  Found the following error pages: &#xa;  &#xa;  Error Code: 400&#xa;  &#x9;http://192.168.92.181:443/&#xa;"/><script id="http-feed" output="Couldn&apos;t find any feeds."/><script id="http-fetch" output="Please enter the complete path of the directory to save data in."><elem key="ERROR">Please enter the complete path of the directory to save data in.</elem>
</script><script id="http-headers" output="&#xa;  Date: Fri, 27 Sep 2019 22:49:13 GMT&#xa;  Server: Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b&#xa;  Connection: close&#xa;  Content-Type: text/html; charset=iso-8859-1&#xa;  &#xa;  (Request type: GET)&#xa;"/><script id="http-jsonp-detection" output="Couldn&apos;t find any JSONP endpoints."/><script id="http-litespeed-sourcecode-download" output="Request with null byte did not work. This web server might not be vulnerable"/><script id="http-malware-host" output="Host appears to be clean"/><script id="http-methods" output="&#xa;  Supported Methods: GET HEAD POST"><table key="Supported Methods">
<elem>GET</elem>
<elem>HEAD</elem>
<elem>POST</elem>
</table>
</script><script id="http-mobileversion-checker" output="No mobile version detected."/><script id="http-referer-checker" output="Couldn&apos;t find any cross-domain scripts."/><script id="http-security-headers" output="&#xa;  Strict_Transport_Security: &#xa;    HSTS not configured in HTTPS Server"><table key="Strict_Transport_Security">
<elem>HSTS not configured in HTTPS Server</elem>
</table>
</script><script id="http-server-header" output="Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b"><elem>Apache/1.3.20 (Unix)  (Red-Hat/Linux) mod_ssl/2.8.4 OpenSSL/0.9.6b</elem>
</script><script id="http-sitemap-generator" output="&#xa;  Directory structure:&#xa;  Longest directory structure:&#xa;    Depth: 0&#xa;    Dir: /&#xa;  Total files found (by extension):&#xa;    &#xa;"/><script id="http-stored-xss" output="Couldn&apos;t find any stored XSS vulnerabilities."/><script id="http-title" output="400 Bad Request"><elem key="title">400 Bad Request</elem>
</script><script id="http-useragent-tester" output="&#xa;  Status for browser useragent: 400&#xa;  Allowed User Agents: &#xa;    Mozilla/5.0 (compatible; Nmap Scripting Engine; https://nmap.org/book/nse.html)&#xa;    libwww&#xa;    lwp-trivial&#xa;    libcurl-agent/1.0&#xa;    PHP/&#xa;    Python-urllib/2.5&#xa;    GT::WWW&#xa;    Snoopy&#xa;    MFC_Tear_Sample&#xa;    HTTP::Lite&#xa;    PHPCrawl&#xa;    URI::Fetch&#xa;    Zend_Http_Client&#xa;    http client&#xa;    PECL::HTTP&#xa;    Wget/1.13.4 (linux-gnu)&#xa;    WWW-Mechanize/1.34"><elem key="Status for browser useragent">400</elem>
<table key="Allowed User Agents">
<elem>Mozilla/5.0 (compatible; Nmap Scripting Engine; https://nmap.org/book/nse.html)</elem>
<elem>libwww</elem>
<elem>lwp-trivial</elem>
<elem>libcurl-agent/1.0</elem>
<elem>PHP/</elem>
<elem>Python-urllib/2.5</elem>
<elem>GT::WWW</elem>
<elem>Snoopy</elem>
<elem>MFC_Tear_Sample</elem>
<elem>HTTP::Lite</elem>
<elem>PHPCrawl</elem>
<elem>URI::Fetch</elem>
<elem>Zend_Http_Client</elem>
<elem>http client</elem>
<elem>PECL::HTTP</elem>
<elem>Wget/1.13.4 (linux-gnu)</elem>
<elem>WWW-Mechanize/1.34</elem>
</table>
</script><script id="http-vhosts" output="&#xa;127 names had status 400"/><script id="http-wordpress-enum" output="Nothing found amongst the top 100 resources,use -&#45;script-args search-limit=&lt;number|all&gt; for deeper analysis)"/><script id="http-wordpress-users" output="[Error] Wordpress installation was not found. We couldn&apos;t find wp-login.php"/><script id="ssl-ccs-injection" output="&#xa;  VULNERABLE:&#xa;  SSL/TLS MITM vulnerability (CCS Injection)&#xa;    State: VULNERABLE&#xa;    Risk factor: High&#xa;      OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h&#xa;      does not properly restrict processing of ChangeCipherSpec messages,&#xa;      which allows man-in-the-middle attackers to trigger use of a zero&#xa;      length master key in certain OpenSSL-to-OpenSSL communications, and&#xa;      consequently hijack sessions or obtain sensitive information, via&#xa;      a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.&#xa;          &#xa;    References:&#xa;      http://www.cvedetails.com/cve/2014-0224&#xa;      http://www.openssl.org/news/secadv_20140605.txt&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224&#xa;"><table key="NMAP-5">
<elem key="title">SSL/TLS MITM vulnerability (CCS Injection)</elem>
<elem key="state">VULNERABLE</elem>
<table key="description">
<elem>OpenSSL before 0.9.8za, 1.0.0 before 1.0.0m, and 1.0.1 before 1.0.1h&#xa;does not properly restrict processing of ChangeCipherSpec messages,&#xa;which allows man-in-the-middle attackers to trigger use of a zero&#xa;length master key in certain OpenSSL-to-OpenSSL communications, and&#xa;consequently hijack sessions or obtain sensitive information, via&#xa;a crafted TLS handshake, aka the &quot;CCS Injection&quot; vulnerability.&#xa;    </elem>
</table>
<table key="refs">
<elem>http://www.cvedetails.com/cve/2014-0224</elem>
<elem>http://www.openssl.org/news/secadv_20140605.txt</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-0224</elem>
</table>
</table>
</script><script id="ssl-date" output="2019-09-27T22:48:56+00:00; +1m38s from scanner time."><elem key="delta">98.0</elem>
<elem key="date">2019-09-27T22:48:56+00:00</elem>
</script><script id="ssl-dh-params" output="&#xa;  VULNERABLE:&#xa;  Transport Layer Security (TLS) Protocol DHE_EXPORT Ciphers Downgrade MitM (Logjam)&#xa;    State: VULNERABLE&#xa;    IDs:  CVE:CVE-2015-4000  OSVDB:122331&#xa;      The Transport Layer Security (TLS) protocol contains a flaw that is&#xa;      triggered when handling Diffie-Hellman key exchanges defined with&#xa;      the DHE_EXPORT cipher. This may allow a man-in-the-middle attacker&#xa;      to downgrade the security of a TLS session to 512-bit export-grade&#xa;      cryptography, which is significantly weaker, allowing the attacker&#xa;      to more easily break the encryption and monitor or tamper with&#xa;      the encrypted stream.&#xa;    Disclosure date: 2015-5-19&#xa;    Check results:&#xa;      EXPORT-GRADE DH GROUP 1&#xa;            Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA&#xa;            Modulus Type: Safe prime&#xa;            Modulus Source: mod_ssl 2.0.x/512-bit MODP group with safe prime modulus&#xa;            Modulus Length: 512&#xa;            Generator Length: 8&#xa;            Public Key Length: 512&#xa;    References:&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4000&#xa;      http://osvdb.org/122331&#xa;      https://weakdh.org&#xa;  &#xa;  Diffie-Hellman Key Exchange Insufficient Group Strength&#xa;    State: VULNERABLE&#xa;      Transport Layer Security (TLS) services that use Diffie-Hellman groups&#xa;      of insufficient strength, especially those using one of a few commonly&#xa;      shared groups, may be susceptible to passive eavesdropping attacks.&#xa;    Check results:&#xa;      WEAK DH GROUP 1&#xa;            Cipher Suite: TLS_DHE_RSA_WITH_DES_CBC_SHA&#xa;            Modulus Type: Safe prime&#xa;            Modulus Source: mod_ssl 2.0.x/1024-bit MODP group with safe prime modulus&#xa;            Modulus Length: 1024&#xa;            Generator Length: 8&#xa;            Public Key Length: 1024&#xa;    References:&#xa;      https://weakdh.org&#xa;"><table key="CVE-2015-4000">
<elem key="title">Transport Layer Security (TLS) Protocol DHE_EXPORT Ciphers Downgrade MitM (Logjam)</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2015-4000</elem>
<elem>OSVDB:122331</elem>
</table>
<table key="description">
<elem>The Transport Layer Security (TLS) protocol contains a flaw that is&#xa;triggered when handling Diffie-Hellman key exchanges defined with&#xa;the DHE_EXPORT cipher. This may allow a man-in-the-middle attacker&#xa;to downgrade the security of a TLS session to 512-bit export-grade&#xa;cryptography, which is significantly weaker, allowing the attacker&#xa;to more easily break the encryption and monitor or tamper with&#xa;the encrypted stream.</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="day">19</elem>
<elem key="month">5</elem>
<elem key="year">2015</elem>
</table>
</table>
<elem key="disclosure">2015-5-19</elem>
<table key="check_results">
<elem>EXPORT-GRADE DH GROUP 1&#xa;      Cipher Suite: TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA&#xa;      Modulus Type: Safe prime&#xa;      Modulus Source: mod_ssl 2.0.x/512-bit MODP group with safe prime modulus&#xa;      Modulus Length: 512&#xa;      Generator Length: 8&#xa;      Public Key Length: 512</elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-4000</elem>
<elem>http://osvdb.org/122331</elem>
<elem>https://weakdh.org</elem>
</table>
</table>
<table key="NMAP-3">
<elem key="title">Diffie-Hellman Key Exchange Insufficient Group Strength</elem>
<elem key="state">VULNERABLE</elem>
<table key="description">
<elem>Transport Layer Security (TLS) services that use Diffie-Hellman groups&#xa;of insufficient strength, especially those using one of a few commonly&#xa;shared groups, may be susceptible to passive eavesdropping attacks.</elem>
</table>
<table key="check_results">
<elem>WEAK DH GROUP 1&#xa;      Cipher Suite: TLS_DHE_RSA_WITH_DES_CBC_SHA&#xa;      Modulus Type: Safe prime&#xa;      Modulus Source: mod_ssl 2.0.x/1024-bit MODP group with safe prime modulus&#xa;      Modulus Length: 1024&#xa;      Generator Length: 8&#xa;      Public Key Length: 1024</elem>
</table>
<table key="refs">
<elem>https://weakdh.org</elem>
</table>
</table>
</script><script id="ssl-enum-ciphers" output="&#xa;  SSLv3: &#xa;    ciphers: &#xa;      TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA - E&#xa;      TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA (dh 1024) - F&#xa;      TLS_DHE_RSA_WITH_DES_CBC_SHA (dh 1024) - F&#xa;      TLS_RSA_EXPORT1024_WITH_DES_CBC_SHA - D&#xa;      TLS_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5 - D&#xa;      TLS_RSA_EXPORT1024_WITH_RC4_56_MD5 - D&#xa;      TLS_RSA_EXPORT1024_WITH_RC4_56_SHA - D&#xa;      TLS_RSA_EXPORT_WITH_DES40_CBC_SHA - E&#xa;      TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 - E&#xa;      TLS_RSA_EXPORT_WITH_RC4_40_MD5 - E&#xa;      TLS_RSA_WITH_3DES_EDE_CBC_SHA - F&#xa;      TLS_RSA_WITH_DES_CBC_SHA - F&#xa;      TLS_RSA_WITH_RC4_128_MD5 - F&#xa;      TLS_RSA_WITH_RC4_128_SHA - F&#xa;    compressors: &#xa;      NULL&#xa;    cipher preference: client&#xa;    warnings: &#xa;      64-bit block cipher 3DES vulnerable to SWEET32 attack&#xa;      64-bit block cipher DES vulnerable to SWEET32 attack&#xa;      64-bit block cipher DES40 vulnerable to SWEET32 attack&#xa;      64-bit block cipher RC2 vulnerable to SWEET32 attack&#xa;      Broken cipher RC4 is deprecated by RFC 7465&#xa;      CBC-mode cipher in SSLv3 (CVE-2014-3566)&#xa;      Ciphersuite uses MD5 for message integrity&#xa;      Insecure certificate signature: MD5&#xa;  TLSv1.0: &#xa;    ciphers: &#xa;      TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA - E&#xa;      TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA (dh 1024) - F&#xa;      TLS_DHE_RSA_WITH_DES_CBC_SHA (dh 1024) - F&#xa;      TLS_RSA_EXPORT1024_WITH_DES_CBC_SHA - D&#xa;      TLS_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5 - D&#xa;      TLS_RSA_EXPORT1024_WITH_RC4_56_MD5 - D&#xa;      TLS_RSA_EXPORT1024_WITH_RC4_56_SHA - D&#xa;      TLS_RSA_EXPORT_WITH_DES40_CBC_SHA - E&#xa;      TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5 - E&#xa;      TLS_RSA_EXPORT_WITH_RC4_40_MD5 - E&#xa;      TLS_RSA_WITH_3DES_EDE_CBC_SHA - F&#xa;      TLS_RSA_WITH_DES_CBC_SHA - F&#xa;      TLS_RSA_WITH_RC4_128_MD5 - F&#xa;      TLS_RSA_WITH_RC4_128_SHA - F&#xa;    compressors: &#xa;      NULL&#xa;    cipher preference: client&#xa;    warnings: &#xa;      64-bit block cipher 3DES vulnerable to SWEET32 attack&#xa;      64-bit block cipher DES vulnerable to SWEET32 attack&#xa;      64-bit block cipher DES40 vulnerable to SWEET32 attack&#xa;      64-bit block cipher RC2 vulnerable to SWEET32 attack&#xa;      Broken cipher RC4 is deprecated by RFC 7465&#xa;      Ciphersuite uses MD5 for message integrity&#xa;      Insecure certificate signature: MD5&#xa;  least strength: F"><table key="SSLv3">
<table key="ciphers">
<table>
<elem key="name">TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA</elem>
<elem key="strength">E</elem>
</table>
<table>
<elem key="kex_info">dh 1024</elem>
<elem key="name">TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA</elem>
<elem key="strength">F</elem>
</table>
<table>
<elem key="kex_info">dh 1024</elem>
<elem key="name">TLS_DHE_RSA_WITH_DES_CBC_SHA</elem>
<elem key="strength">F</elem>
</table>
<table>
<elem key="name">TLS_RSA_EXPORT1024_WITH_DES_CBC_SHA</elem>
<elem key="strength">D</elem>
</table>
<table>
<elem key="name">TLS_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5</elem>
<elem key="strength">D</elem>
</table>
<table>
<elem key="name">TLS_RSA_EXPORT1024_WITH_RC4_56_MD5</elem>
<elem key="strength">D</elem>
</table>
<table>
<elem key="name">TLS_RSA_EXPORT1024_WITH_RC4_56_SHA</elem>
<elem key="strength">D</elem>
</table>
<table>
<elem key="name">TLS_RSA_EXPORT_WITH_DES40_CBC_SHA</elem>
<elem key="strength">E</elem>
</table>
<table>
<elem key="name">TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5</elem>
<elem key="strength">E</elem>
</table>
<table>
<elem key="name">TLS_RSA_EXPORT_WITH_RC4_40_MD5</elem>
<elem key="strength">E</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_3DES_EDE_CBC_SHA</elem>
<elem key="strength">F</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_DES_CBC_SHA</elem>
<elem key="strength">F</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_RC4_128_MD5</elem>
<elem key="strength">F</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_RC4_128_SHA</elem>
<elem key="strength">F</elem>
</table>
</table>
<table key="compressors">
<elem>NULL</elem>
</table>
<elem key="cipher preference">client</elem>
<table key="warnings">
<elem>64-bit block cipher 3DES vulnerable to SWEET32 attack</elem>
<elem>64-bit block cipher DES vulnerable to SWEET32 attack</elem>
<elem>64-bit block cipher DES40 vulnerable to SWEET32 attack</elem>
<elem>64-bit block cipher RC2 vulnerable to SWEET32 attack</elem>
<elem>Broken cipher RC4 is deprecated by RFC 7465</elem>
<elem>CBC-mode cipher in SSLv3 (CVE-2014-3566)</elem>
<elem>Ciphersuite uses MD5 for message integrity</elem>
<elem>Insecure certificate signature: MD5</elem>
</table>
</table>
<table key="TLSv1.0">
<table key="ciphers">
<table>
<elem key="name">TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA</elem>
<elem key="strength">E</elem>
</table>
<table>
<elem key="kex_info">dh 1024</elem>
<elem key="name">TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA</elem>
<elem key="strength">F</elem>
</table>
<table>
<elem key="kex_info">dh 1024</elem>
<elem key="name">TLS_DHE_RSA_WITH_DES_CBC_SHA</elem>
<elem key="strength">F</elem>
</table>
<table>
<elem key="name">TLS_RSA_EXPORT1024_WITH_DES_CBC_SHA</elem>
<elem key="strength">D</elem>
</table>
<table>
<elem key="name">TLS_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5</elem>
<elem key="strength">D</elem>
</table>
<table>
<elem key="name">TLS_RSA_EXPORT1024_WITH_RC4_56_MD5</elem>
<elem key="strength">D</elem>
</table>
<table>
<elem key="name">TLS_RSA_EXPORT1024_WITH_RC4_56_SHA</elem>
<elem key="strength">D</elem>
</table>
<table>
<elem key="name">TLS_RSA_EXPORT_WITH_DES40_CBC_SHA</elem>
<elem key="strength">E</elem>
</table>
<table>
<elem key="name">TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5</elem>
<elem key="strength">E</elem>
</table>
<table>
<elem key="name">TLS_RSA_EXPORT_WITH_RC4_40_MD5</elem>
<elem key="strength">E</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_3DES_EDE_CBC_SHA</elem>
<elem key="strength">F</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_DES_CBC_SHA</elem>
<elem key="strength">F</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_RC4_128_MD5</elem>
<elem key="strength">F</elem>
</table>
<table>
<elem key="name">TLS_RSA_WITH_RC4_128_SHA</elem>
<elem key="strength">F</elem>
</table>
</table>
<table key="compressors">
<elem>NULL</elem>
</table>
<elem key="cipher preference">client</elem>
<table key="warnings">
<elem>64-bit block cipher 3DES vulnerable to SWEET32 attack</elem>
<elem>64-bit block cipher DES vulnerable to SWEET32 attack</elem>
<elem>64-bit block cipher DES40 vulnerable to SWEET32 attack</elem>
<elem>64-bit block cipher RC2 vulnerable to SWEET32 attack</elem>
<elem>Broken cipher RC4 is deprecated by RFC 7465</elem>
<elem>Ciphersuite uses MD5 for message integrity</elem>
<elem>Insecure certificate signature: MD5</elem>
</table>
</table>
<elem key="least strength">F</elem>
</script><script id="ssl-poodle" output="&#xa;  VULNERABLE:&#xa;  SSL POODLE information leak&#xa;    State: VULNERABLE&#xa;    IDs:  CVE:CVE-2014-3566  OSVDB:113251&#xa;          The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other&#xa;          products, uses nondeterministic CBC padding, which makes it easier&#xa;          for man-in-the-middle attackers to obtain cleartext data via a&#xa;          padding-oracle attack, aka the &quot;POODLE&quot; issue.&#xa;    Disclosure date: 2014-10-14&#xa;    Check results:&#xa;      TLS_RSA_WITH_3DES_EDE_CBC_SHA&#xa;    References:&#xa;      http://osvdb.org/113251&#xa;      https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566&#xa;      https://www.openssl.org/~bodo/ssl-poodle.pdf&#xa;      https://www.imperialviolet.org/2014/10/14/poodle.html&#xa;"><table key="CVE-2014-3566">
<elem key="title">SSL POODLE information leak</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2014-3566</elem>
<elem>OSVDB:113251</elem>
</table>
<table key="description">
<elem>    The SSL protocol 3.0, as used in OpenSSL through 1.0.1i and other&#xa;    products, uses nondeterministic CBC padding, which makes it easier&#xa;    for man-in-the-middle attackers to obtain cleartext data via a&#xa;    padding-oracle attack, aka the &quot;POODLE&quot; issue.</elem>
</table>
<table key="dates">
<table key="disclosure">
<elem key="day">14</elem>
<elem key="month">10</elem>
<elem key="year">2014</elem>
</table>
</table>
<elem key="disclosure">2014-10-14</elem>
<table key="check_results">
<elem>TLS_RSA_WITH_3DES_EDE_CBC_SHA</elem>
</table>
<table key="refs">
<elem>http://osvdb.org/113251</elem>
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-3566</elem>
<elem>https://www.openssl.org/~bodo/ssl-poodle.pdf</elem>
<elem>https://www.imperialviolet.org/2014/10/14/poodle.html</elem>
</table>
</table>
</script><script id="sslv2" output="&#xa;  SSLv2 supported&#xa;  ciphers: &#xa;    SSL2_RC4_128_WITH_MD5&#xa;    SSL2_RC4_128_EXPORT40_WITH_MD5&#xa;    SSL2_RC2_128_CBC_WITH_MD5&#xa;    SSL2_RC4_64_WITH_MD5&#xa;    SSL2_DES_192_EDE3_CBC_WITH_MD5&#xa;    SSL2_RC2_128_CBC_EXPORT40_WITH_MD5&#xa;    SSL2_DES_64_CBC_WITH_MD5"><elem>SSLv2 supported</elem>
<table key="ciphers">
<elem>SSL2_RC4_128_WITH_MD5</elem>
<elem>SSL2_RC4_128_EXPORT40_WITH_MD5</elem>
<elem>SSL2_RC2_128_CBC_WITH_MD5</elem>
<elem>SSL2_RC4_64_WITH_MD5</elem>
<elem>SSL2_DES_192_EDE3_CBC_WITH_MD5</elem>
<elem>SSL2_RC2_128_CBC_EXPORT40_WITH_MD5</elem>
<elem>SSL2_DES_64_CBC_WITH_MD5</elem>
</table>
</script><script id="sslv2-drown" output="&#xa;  ciphers: &#xa;    SSL2_RC4_128_WITH_MD5&#xa;    SSL2_RC4_128_EXPORT40_WITH_MD5&#xa;    SSL2_RC2_128_CBC_WITH_MD5&#xa;    SSL2_RC4_64_WITH_MD5&#xa;    SSL2_DES_192_EDE3_CBC_WITH_MD5&#xa;    SSL2_RC2_128_CBC_EXPORT40_WITH_MD5&#xa;    SSL2_DES_64_CBC_WITH_MD5&#xa;  vulns: &#xa;    CVE-2016-0703: &#xa;      title: OpenSSL: Divide-and-conquer session key recovery in SSLv2&#xa;      state: VULNERABLE&#xa;      ids: &#xa;        CVE:CVE-2016-0703&#xa;      description: &#xa;              The get_client_master_key function in s2_srvr.c in the SSLv2 implementation in&#xa;      OpenSSL before 0.9.8zf, 1.0.0 before 1.0.0r, 1.0.1 before 1.0.1m, and 1.0.2 before&#xa;      1.0.2a accepts a nonzero CLIENT-MASTER-KEY CLEAR-KEY-LENGTH value for an arbitrary&#xa;      cipher, which allows man-in-the-middle attackers to determine the MASTER-KEY value&#xa;      and decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding oracle, a&#xa;      related issue to CVE-2016-0800.&#xa;    &#xa;      refs: &#xa;        https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0703&#xa;        https://www.openssl.org/news/secadv/20160301.txt&#xa;    CVE-2016-0800: &#xa;      title: OpenSSL: Cross-protocol attack on TLS using SSLv2 (DROWN)&#xa;      state: VULNERABLE&#xa;      ids: &#xa;        CVE:CVE-2016-0800&#xa;      description: &#xa;              The SSLv2 protocol, as used in OpenSSL before 1.0.1s and 1.0.2 before 1.0.2g and&#xa;      other products, requires a server to send a ServerVerify message before establishing&#xa;      that a client possesses certain plaintext RSA data, which makes it easier for remote&#xa;      attackers to decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding&#xa;      oracle, aka a &quot;DROWN&quot; attack.&#xa;    &#xa;      refs: &#xa;        https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0800&#xa;        https://www.openssl.org/news/secadv/20160301.txt"><table key="ciphers">
<elem>SSL2_RC4_128_WITH_MD5</elem>
<elem>SSL2_RC4_128_EXPORT40_WITH_MD5</elem>
<elem>SSL2_RC2_128_CBC_WITH_MD5</elem>
<elem>SSL2_RC4_64_WITH_MD5</elem>
<elem>SSL2_DES_192_EDE3_CBC_WITH_MD5</elem>
<elem>SSL2_RC2_128_CBC_EXPORT40_WITH_MD5</elem>
<elem>SSL2_DES_64_CBC_WITH_MD5</elem>
</table>
<table key="vulns">
<table key="CVE-2016-0703">
<elem key="title">OpenSSL: Divide-and-conquer session key recovery in SSLv2</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2016-0703</elem>
</table>
<table key="description">
<elem>      The get_client_master_key function in s2_srvr.c in the SSLv2 implementation in&#xa;      OpenSSL before 0.9.8zf, 1.0.0 before 1.0.0r, 1.0.1 before 1.0.1m, and 1.0.2 before&#xa;      1.0.2a accepts a nonzero CLIENT-MASTER-KEY CLEAR-KEY-LENGTH value for an arbitrary&#xa;      cipher, which allows man-in-the-middle attackers to determine the MASTER-KEY value&#xa;      and decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding oracle, a&#xa;      related issue to CVE-2016-0800.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0703</elem>
<elem>https://www.openssl.org/news/secadv/20160301.txt</elem>
</table>
</table>
<table key="CVE-2016-0800">
<elem key="title">OpenSSL: Cross-protocol attack on TLS using SSLv2 (DROWN)</elem>
<elem key="state">VULNERABLE</elem>
<table key="ids">
<elem>CVE:CVE-2016-0800</elem>
</table>
<table key="description">
<elem>      The SSLv2 protocol, as used in OpenSSL before 1.0.1s and 1.0.2 before 1.0.2g and&#xa;      other products, requires a server to send a ServerVerify message before establishing&#xa;      that a client possesses certain plaintext RSA data, which makes it easier for remote&#xa;      attackers to decrypt TLS ciphertext data by leveraging a Bleichenbacher RSA padding&#xa;      oracle, aka a &quot;DROWN&quot; attack.&#xa;    </elem>
</table>
<table key="refs">
<elem>https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-0800</elem>
<elem>https://www.openssl.org/news/secadv/20160301.txt</elem>
</table>
</table>
</table>
</script></port>
</ports>
<times srtt="538" rttvar="3822" to="100000"/>
</host>
<taskbegin task="NSE" time="1569624576"/>
<taskend task="NSE" time="1569624576"/>
<taskbegin task="NSE" time="1569624576"/>
<taskend task="NSE" time="1569624576"/>
<runstats><finished time="1569624576" timestr="Fri Sep 27 15:49:36 2019" elapsed="165.11" summary="Nmap done at Fri Sep 27 15:49:36 2019; 1 IP address (1 host up) scanned in 165.11 seconds" exit="success"/><hosts up="1" down="0" total="1"/>
</runstats>
</nmaprun>
